name: Docker Build Services

on:
  push:
    branches: [ rk3 ]
  pull_request:
    branches: [ rk3 ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      #    билдим имейджи для всех сервисов
      - name: Build Docker image for main server
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8} -f Dockerfile .
      - name: Build Docker image for auth service
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8} -f Dockerfile_auth .
      - name: Build Docker image for films service
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/films:${GITHUB_SHA::8} -f Dockerfile_films .
      - name: Build Docker image for series service
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/series:${GITHUB_SHA::8} -f Dockerfile_series .
      #      пушим все , что можем в докерхаб
      - name: Push the image for main
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8}
      - name: Push the image for auth service
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8}
      - name: Push the image for films service
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/films:${GITHUB_SHA::8}
      - name: Push the image for series service
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/series:${GITHUB_SHA::8}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # чистим чистим чистим
      - name: remove docker containers
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker stop $(docker ps -a |grep ${{ secrets.DOCKERHUB_USERNAME }} | awk '{print $1}')
            sudo docker rm $(docker ps -a |grep ${{ secrets.DOCKERHUB_USERNAME }} | awk '{print $1}')

      #      на серверке подтягиваем все наши уже сбилдженные контейнеры
      - name: pull docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/films:${GITHUB_SHA::8}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/series:${GITHUB_SHA::8}
      # запускаем все докеры, порядок важен! не забыть чистить предыдущие попытки!
      - name: deploy docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
#            sudo docker network create kino
            sudo docker run -d --network="host" -p 8083:8083 --name series ${{ secrets.DOCKERHUB_USERNAME }}/series:${GITHUB_SHA::8}
            sudo docker run -d --network="host" -p 8082:8082 --name films ${{ secrets.DOCKERHUB_USERNAME }}/films:${GITHUB_SHA::8}
            sudo docker run -d --network="host" -p 8081:8081 --name auth ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8}
            sudo docker run -d --network="host" -v /./frontend/static/img:/./frontend/static/img  -p 8080:8080 --name main ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8}