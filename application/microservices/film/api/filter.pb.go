// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: filter.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Strings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *Strings) Reset() {
	*x = Strings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strings) ProtoMessage() {}

func (x *Strings) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strings.ProtoReflect.Descriptor instead.
func (*Strings) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{0}
}

func (x *Strings) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*Strings `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetFields() map[string]*Strings {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Film struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MainGenre       string  `protobuf:"bytes,2,opt,name=mainGenre,proto3" json:"mainGenre,omitempty"`
	RussianName     string  `protobuf:"bytes,3,opt,name=russianName,proto3" json:"russianName,omitempty"`
	EnglishName     string  `protobuf:"bytes,4,opt,name=englishName,proto3" json:"englishName,omitempty"`
	TrailerLink     string  `protobuf:"bytes,5,opt,name=trailerLink,proto3" json:"trailerLink,omitempty"`
	Rating          float64 `protobuf:"fixed64,6,opt,name=rating,proto3" json:"rating,omitempty"`
	ImdbRating      float64 `protobuf:"fixed64,7,opt,name=imdbRating,proto3" json:"imdbRating,omitempty"`
	TotalVotes      int64   `protobuf:"varint,8,opt,name=totalVotes,proto3" json:"totalVotes,omitempty"`
	SumVotes        int64   `protobuf:"varint,9,opt,name=sumVotes,proto3" json:"sumVotes,omitempty"`
	Description     string  `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Image           string  `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`
	BackgroundImage string  `protobuf:"bytes,12,opt,name=backgroundImage,proto3" json:"backgroundImage,omitempty"`
	Country         string  `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`
	Year            int64   `protobuf:"varint,14,opt,name=year,proto3" json:"year,omitempty"`
	AgeLimit        int64   `protobuf:"varint,15,opt,name=ageLimit,proto3" json:"ageLimit,omitempty"`
}

func (x *Film) Reset() {
	*x = Film{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{2}
}

func (x *Film) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Film) GetMainGenre() string {
	if x != nil {
		return x.MainGenre
	}
	return ""
}

func (x *Film) GetRussianName() string {
	if x != nil {
		return x.RussianName
	}
	return ""
}

func (x *Film) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *Film) GetTrailerLink() string {
	if x != nil {
		return x.TrailerLink
	}
	return ""
}

func (x *Film) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Film) GetImdbRating() float64 {
	if x != nil {
		return x.ImdbRating
	}
	return 0
}

func (x *Film) GetTotalVotes() int64 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *Film) GetSumVotes() int64 {
	if x != nil {
		return x.SumVotes
	}
	return 0
}

func (x *Film) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Film) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Film) GetBackgroundImage() string {
	if x != nil {
		return x.BackgroundImage
	}
	return ""
}

func (x *Film) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Film) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Film) GetAgeLimit() int64 {
	if x != nil {
		return x.AgeLimit
	}
	return 0
}

type Films struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Film `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *Films) Reset() {
	*x = Films{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Films) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Films) ProtoMessage() {}

func (x *Films) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Films.ProtoReflect.Descriptor instead.
func (*Films) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{3}
}

func (x *Films) GetList() []*Film {
	if x != nil {
		return x.List
	}
	return nil
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{4}
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Genre) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type Genres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Genre `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *Genres) Reset() {
	*x = Genres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genres) ProtoMessage() {}

func (x *Genres) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genres.ProtoReflect.Descriptor instead.
func (*Genres) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{5}
}

func (x *Genres) GetList() []*Genre {
	if x != nil {
		return x.List
	}
	return nil
}

type FilterFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*Genres `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FilterFields) Reset() {
	*x = FilterFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterFields) ProtoMessage() {}

func (x *FilterFields) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterFields.ProtoReflect.Descriptor instead.
func (*FilterFields) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{6}
}

func (x *FilterFields) GetFields() map[string]*Genres {
	if x != nil {
		return x.Fields
	}
	return nil
}

type EmptyArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyArgs) Reset() {
	*x = EmptyArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyArgs) ProtoMessage() {}

func (x *EmptyArgs) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyArgs.ProtoReflect.Descriptor instead.
func (*EmptyArgs) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{7}
}

var File_filter_proto protoreflect.FileDescriptor

var file_filter_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x61, 0x70, 0x69, 0x22, 0x1f, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x1a, 0x47, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xba, 0x03, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x4c,
	0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6d, 0x64, 0x62, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x69, 0x6d, 0x64, 0x62, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x75, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x26, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12,
	0x1d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x39,
	0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x06, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x46, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x67, 0x73,
	0x32, 0x73, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x0b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x6d, 0x73, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filter_proto_rawDescOnce sync.Once
	file_filter_proto_rawDescData = file_filter_proto_rawDesc
)

func file_filter_proto_rawDescGZIP() []byte {
	file_filter_proto_rawDescOnce.Do(func() {
		file_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_filter_proto_rawDescData)
	})
	return file_filter_proto_rawDescData
}

var file_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_filter_proto_goTypes = []interface{}{
	(*Strings)(nil),      // 0: api.Strings
	(*Filter)(nil),       // 1: api.Filter
	(*Film)(nil),         // 2: api.Film
	(*Films)(nil),        // 3: api.Films
	(*Genre)(nil),        // 4: api.Genre
	(*Genres)(nil),       // 5: api.Genres
	(*FilterFields)(nil), // 6: api.FilterFields
	(*EmptyArgs)(nil),    // 7: api.EmptyArgs
	nil,                  // 8: api.Filter.FieldsEntry
	nil,                  // 9: api.FilterFields.FieldsEntry
}
var file_filter_proto_depIdxs = []int32{
	8, // 0: api.Filter.fields:type_name -> api.Filter.FieldsEntry
	2, // 1: api.Films.list:type_name -> api.Film
	4, // 2: api.Genres.list:type_name -> api.Genre
	9, // 3: api.FilterFields.fields:type_name -> api.FilterFields.FieldsEntry
	0, // 4: api.Filter.FieldsEntry.value:type_name -> api.Strings
	5, // 5: api.FilterFields.FieldsEntry.value:type_name -> api.Genres
	7, // 6: api.FilmFilter.GetFilterFields:input_type -> api.EmptyArgs
	1, // 7: api.FilmFilter.GetFilteredFilms:input_type -> api.Filter
	6, // 8: api.FilmFilter.GetFilterFields:output_type -> api.FilterFields
	3, // 9: api.FilmFilter.GetFilteredFilms:output_type -> api.Films
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_filter_proto_init() }
func file_filter_proto_init() {
	if File_filter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Film); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Films); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filter_proto_goTypes,
		DependencyIndexes: file_filter_proto_depIdxs,
		MessageInfos:      file_filter_proto_msgTypes,
	}.Build()
	File_filter_proto = out.File
	file_filter_proto_rawDesc = nil
	file_filter_proto_goTypes = nil
	file_filter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FilmFilterClient is the client API for FilmFilter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilmFilterClient interface {
	GetFilterFields(ctx context.Context, in *EmptyArgs, opts ...grpc.CallOption) (*FilterFields, error)
	GetFilteredFilms(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Films, error)
}

type filmFilterClient struct {
	cc grpc.ClientConnInterface
}

func NewFilmFilterClient(cc grpc.ClientConnInterface) FilmFilterClient {
	return &filmFilterClient{cc}
}

func (c *filmFilterClient) GetFilterFields(ctx context.Context, in *EmptyArgs, opts ...grpc.CallOption) (*FilterFields, error) {
	out := new(FilterFields)
	err := c.cc.Invoke(ctx, "/api.FilmFilter/GetFilterFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmFilterClient) GetFilteredFilms(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Films, error) {
	out := new(Films)
	err := c.cc.Invoke(ctx, "/api.FilmFilter/GetFilteredFilms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilmFilterServer is the server API for FilmFilter service.
type FilmFilterServer interface {
	GetFilterFields(context.Context, *EmptyArgs) (*FilterFields, error)
	GetFilteredFilms(context.Context, *Filter) (*Films, error)
}

// UnimplementedFilmFilterServer can be embedded to have forward compatible implementations.
type UnimplementedFilmFilterServer struct {
}

func (*UnimplementedFilmFilterServer) GetFilterFields(context.Context, *EmptyArgs) (*FilterFields, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilterFields not implemented")
}
func (*UnimplementedFilmFilterServer) GetFilteredFilms(context.Context, *Filter) (*Films, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilteredFilms not implemented")
}

func RegisterFilmFilterServer(s *grpc.Server, srv FilmFilterServer) {
	s.RegisterService(&_FilmFilter_serviceDesc, srv)
}

func _FilmFilter_GetFilterFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmFilterServer).GetFilterFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FilmFilter/GetFilterFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmFilterServer).GetFilterFields(ctx, req.(*EmptyArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmFilter_GetFilteredFilms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmFilterServer).GetFilteredFilms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FilmFilter/GetFilteredFilms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmFilterServer).GetFilteredFilms(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilmFilter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.FilmFilter",
	HandlerType: (*FilmFilterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFilterFields",
			Handler:    _FilmFilter_GetFilterFields_Handler,
		},
		{
			MethodName: "GetFilteredFilms",
			Handler:    _FilmFilter_GetFilteredFilms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filter.proto",
}
