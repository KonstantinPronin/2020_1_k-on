// Code generated by MockGen. DO NOT EDIT.
// Source: ./application/microservices/series/filter/repository.go

// Package mock_filter is a generated GoMock package.
package mocks

import (
	models "github.com/go-park-mail-ru/2020_1_k-on/application/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// FilterSeriesList mocks base method
func (m *MockRepository) FilterSeriesList(fields map[string][]string) (*models.SeriesArr, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FilterSeriesList", fields)
	ret0, _ := ret[0].(*models.SeriesArr)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// FilterSeriesList indicates an expected call of FilterSeriesList
func (mr *MockRepositoryMockRecorder) FilterSeriesList(fields interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FilterSeriesList", reflect.TypeOf((*MockRepository)(nil).FilterSeriesList), fields)
}

// FilterSeriesData mocks base method
func (m *MockRepository) FilterSeriesData() (map[string]models.Genres, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FilterSeriesData")
	ret0, _ := ret[0].(map[string]models.Genres)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// FilterSeriesData indicates an expected call of FilterSeriesData
func (mr *MockRepositoryMockRecorder) FilterSeriesData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FilterSeriesData", reflect.TypeOf((*MockRepository)(nil).FilterSeriesData))
}
